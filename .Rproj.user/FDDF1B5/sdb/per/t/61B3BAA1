{
    "contents" : "#' Creates a random syllable either 3 or 4 letters long\n#'\n#' @export\n#' @examples\n#' chance.syllable()\n#' \nchance.syllable <- function(){\n  len <- chance.integer(2, 3)\n  consonants <- 'bcdfghjklmnprstvwz' # consonants except hard to speak ones\n  vowels <- 'aeiou' # vowels\n  all <- paste0(consonants, vowels, collapse='')\n  text <- ''\n  chr <- ''\n  \n  for(i in 0:len) {\n    if(i == 0) {\n      # First character can be anything\n      chr <- chance.character(user=all)\n    }else if(grepl(chr, vowels)) {\n      # Last character was a vowel, now we want a consonant\n      chr <- chance.character(user=consonants)\n    }else{\n      # Last character was a consonant, now we want a vowel\n      chr <- chance.character(user=vowels)\n    }\n    text <- c(text, chr)\n  }\n  \n  text <- paste0(text, collapse='')\n  \n  return(text)\n}\n\n#' Get a random sentence\n#'\n#' @param words optional to set maximum words in sentence otherwise defaults to \n#' random length between 12 - 18 words\n#' @export\n#' @examples\n#' chance.sentence()\n#' chance.sentence(words=4)\nchance.sentence <- function(words=NULL){\n  \n  if(is.null(words)){\n    len <- chance.integer(12, 18)\n  }else{\n    len <- words\n  }\n  \n  words <- sapply(1:len, function(x){\n    chance.word()\n  })\n  \n  words <- paste(words, collapse=' ')\n  \n  words <- paste(c(words, '.'), collapse='')\n  \n  words <- chance.capitalise(words)\n  \n  return(words)  \n}\n\n#' Get a random word\n#'\n#' @param len optional maximum length of string to return. Note that only\n#' one of len and syllables can be used\n#' @param syllables optional maximum number of syllables to use. Note that only\n#' one of len and syllables can be used\n#' @export\n#' @examples\n#' chance.word()\n#' chance.string(len=10, case='lower', pool='alpha')\n#' chance.string(len=10, pool='symbol')\n#' \nchance.word <- function(syllables=NULL, len=NULL){\n  \n  if(!is.null(syllables) && !is.null(len)){\n    stop('Only one of syllables and len can be used')\n  }\n  \n  if(is.null(syllables)){\n    sylls <- chance.integer(1, 3)\n  }else{\n    sylls <- syllables\n  }\n  \n  text <- ''\n  \n  if(is.null(len)){\n    text <- sapply(1:sylls, function(x){\n      chance.syllable()\n    })  \n    text <- paste0(text, collapse='')\n  }else{\n    while(nchar(text) < len){\n      text <- paste0(text, chance.syllable(), collapse='')\n    }\n    text <- substr(text, 1, len)\n  }\n  \n  return(text)  \n}\n\n#' Get a random sentence\n#'\n#' @param sentences optional to set maximum sentences in paragraph otherwise defaults to \n#' random length between 3 - 7 sentences\n#' @export\n#' @examples\n#' chance.paragraph()\n#' chance.paragraph(sentences=4)\nchance.paragraph <- function(sentences=NULL){\n  \n  if(is.null(sentences)){\n    len <- chance.integer(3, 7)\n  }else{\n    len <- sentences\n  }\n  \n  words <- sapply(1:len, function(x){\n    chance.sentence()\n  })\n  \n  words <- paste(words, collapse=' ')\n  \n  return(words)  \n}\n\n",
    "created" : 1417794206256.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3352296797",
    "id" : "61B3BAA1",
    "lastKnownWriteTime" : 1417794276,
    "path" : "~/Dropbox/Martin/github/chance/R/text.R",
    "project_path" : "R/text.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}