{
    "contents" : "#' Get a random colour\n#'\n#' @param format can be one of 'hex', 'rgb', 'shorthex'\n#' @param greyscale TRUE or FALSE whether to restrict colour to greyscale\n#' @export\n#' @examples\n#' chancer.colour()\n#' chancer.colour(format='rgb')\n#' chancer.colour(format='rgb', greyscale=TRUE)\nchancer.colour <- function(format='hex', greyscale=FALSE){\n  \n  if(format == 'hex'){\n    if(greyscale){\n      tmp <- chancer.hash(2)\n      colour <- paste0('#', tmp, tmp, tmp)\n    }else{\n      colour <- paste0('#', chancer.hash(6))\n    }\n  }else if(format == 'rgb'){\n    if(greyscale){\n      tmp <- chancer.natural(max=255)\n      colour <- paste0('rgb(', tmp, ',', tmp, ',', tmp, ')')\n    }else{\n      colour <- paste0('rgb(', chancer.natural(max=255), ',', \n                       chancer.natural(max=255), ',', \n                       chancer.natural(max=255), ')')\n    }\n  }else if(format=='shorthex'){\n    if(greyscale){\n      colour <- paste0('#', chancer.hash(1))\n    }else{\n      colour <- paste0('#', chancer.hash(3))\n    }\n  }else{\n    stop(\"format must be one of hex, rgb or shorthex\")\n  }\n  \n  return(colour)\n}\n\n#' Get a random domain name\n#'\n#' @param tld if NULL the tld is random or specifically set \n#' @export\n#' @examples\n#' chancer.domain()\n#' chancer.domain(tld='ie')\nchancer.domain <- function(tld=NULL){\n  \n  domain <- chancer.word()\n  \n  if(is.null(tld)){\n    tld <- chancer.tld()\n  }\n  \n  domain <- paste0(domain, '.', tld, collapse='')\n  \n  return(domain)\n}\n\n#' Get a random email address\n#'\n#' @param domain if NULL the domain is random or can be specifically set \n#' @export\n#' @examples\n#' chancer.email()\n#' chancer.email(domain='rmail.com')\nchancer.email <- function(domain=NULL){\n  \n  email <- chancer.word()\n  \n  if(is.null(domain)){\n    domain <- chancer.domain()\n  }\n  \n  email <- paste0(email, '@', domain, collapse='')\n  \n  return(email)\n}\n\n#' Get a random facebook id (fbid)\n#'\n#' @export\n#' @examples\n#' chancer.facebook()\nchancer.facebook <- function(){\n  \n  fbid <- paste0(\"10000\", as.character(chancer.natural(max=100000000)))\n  \n  return(fbid)\n}\n\n#' Get a random google analytics id\n#'\n#' @export\n#' @examples\n#' chancer.google()\nchancer.google <- function(){\n  \n  account <- paste0(sapply(1:6, chancer.natural, max=9), collapse='')\n  \n  property <- paste0(sapply(1:2, chancer.natural, max=9), collapse='')\n  \n  id <- paste0('UA-', account, '-', property)\n  \n  return(id)\n}\n\n#' Gets a random hashtag\n#'\n#' @export\n#' @examples\n#' chancer.hashtag()\nchancer.hashtag <- function(){\n  \n  tag <- paste0('#', chancer.word())\n  \n  return(tag)\n}\n\n#' Get a random ip address\n#'\n#' @export\n#' @examples\n#' chancer.ip()\nchancer.ip <- function(){\n  \n  ip <- paste0(chancer.natural(max=255),\n               '.',\n               chancer.natural(max=255),\n               '.',\n               chancer.natural(max=255),\n               '.',\n               chancer.natural(max=255), collapse='')\n  \n  return(ip)\n}\n\n#' Get a random ipv6 address\n#'\n#' @export\n#' @examples\n#' chancer.ipv6()\nchancer.ipv6 <- function(){\n  \n  ip <- sapply(1:8, function(x){\n    chancer.hash(len=4, case='lower')\n  })\n  \n  ip <- paste(ip, collapse=':')\n  \n  return(ip)\n}\n\n#' Get a random klout score\n#'\n#' @export\n#' @examples\n#' chancer.klout()\nchancer.klout <- function(){  \n  return(chancer.natural(min=1, max=99))\n}\n\n#' Get a random top level domain\n#'\n#' @export\n#' @examples\n#' chancer.tld()\nchancer.tld <- function(){\n  return(chancer.pick(TLDS))\n}\n\n#' Get a random twitter handle\n#'\n#' @export\n#' @examples\n#' chancer.twitter()\nchancer.twitter <- function(){\n  return(paste0('@', chancer.word()))\n}\n\n",
    "created" : 1418328451841.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1934102627",
    "id" : "66B80A1E",
    "lastKnownWriteTime" : 1418327051,
    "path" : "~/Dropbox/martin/github/chancer/R/web.R",
    "project_path" : "R/web.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}